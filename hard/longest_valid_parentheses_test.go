package hard

import "testing"

func TestLongestValidParentheses(t *testing.T) {
	tests := []struct {
		s    string
		want int
	}{
		{"", 0},
		{"(", 0},
		{"(()", 2},
		{")()())", 4},
		{"))()())())))()))(()(()))))(()()())))((()()((()))))))()((((())))((((((()())(((()))(())()))((())(()((((((())(()))()())()())))(((((()())()())((((()(((())((()(())(((()))()()())()(())((((((()()())()()((())(((())()())()(())()))()))())(())())((()()(((((()))(()))())(()))(((()())))((((()))((())))())((((((())))(()(()(())()()()()())())(()()())((())()(())((())))(()())(())(((((()()(())()((()))))()())()(())(()((((()(((((()))(()(())(((())))())))(()())))(()))()))(()(()))(((()(())(())()()()))()(((())(((()())(((())())(()))))()()))())()((()()()()))())((()))()()(()()(())(((()()()()(()()())()((()()()())())))()((((()()(((())()()((())))(())(()))))(()(()()()))())(())())))))((((()())((()))(()())((((()))())))))()(()(()))))()))())()(((()()()())()()))(()((())((()(()(((((((()))()())()(()()()((((()())))))))(())()()(()())(())())))((())))())()())))(()))()()))(())()()))(()())))(()((((()()(()()((()))()()))(((()))))))()(())(((())(())())())(((()))((()(()())()()))()))()))()((())(())(((()(((()()())))(((()(()(()())()))()))())))((()))))(((((()()(()())))()())))))((((()(()(((())(()((()(()()()()()(())()(()((()()(()))))()(()(())()()))))()))))()()()()(()()((()()()()()((())))()())(()(())(())(()(()())()()))(()))))(()())())()((()))())()())((((()(()()((())(()()()(((()((()(()())(((()((()(()(()(()((()((()())(((((())((()())())((())))))(((((((()(((((()(()))())((()(((((((()(((((()((()()()())(()(()(())))()((", 1144},
	}

	for i, tt := range tests {
		got := longestValidParentheses(tt.s)
		if got != tt.want {
			t.Fatalf("%d: got: %v; want: %v", i, got, tt.want)
		}
	}
}
